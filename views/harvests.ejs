<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Harvests - Vermicomposting Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet">
    <style>
        .harvest-card {
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            background: white;
        }
        .harvest-item {
            border-left: 3px solid #28a745;
            padding: 15px;
            margin-bottom: 10px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }
        .chart-container {
            height: 300px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col-md-8">
                <h2>Harvest Records</h2>
            </div>
            <div class="col-md-4 text-end">
                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addHarvestModal">
                    <i class="bx bx-plus"></i> Record Harvest
                </button>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <!-- Harvest History -->
                <div class="harvest-card p-4">
                    <div id="harvestRecords"></div>
                </div>
            </div>
            <div class="col-md-4">
                <!-- Summary Card -->
                <div class="harvest-card p-4 mb-4">
                    <h5>Harvest Summary</h5>
                    <div class="mt-3">
                        <p>Total Harvests: <span id="totalHarvests" class="fw-bold">-</span></p>
                        <p>Total Amount: <span id="totalAmount" class="fw-bold">-</span> kg</p>
                        <p>Average per Harvest: <span id="avgHarvest" class="fw-bold">-</span> kg</p>
                        <p>Estimated Value: <span id="estimatedValue" class="fw-bold">$-</span></p>
                    </div>
                </div>
                <!-- Filter Card -->
                <div class="harvest-card p-4">
                    <h5>Filter Records</h5>
                    <div class="mt-3">
                        <div class="mb-3">
                            <label class="form-label">Date Range</label>
                            <input type="date" class="form-control mb-2" id="startDate">
                            <input type="date" class="form-control" id="endDate">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Bin</label>
                            <select class="form-select" id="binFilter">
                                <option value="">All Bins</option>
                            </select>
                        </div>
                        <button class="btn btn-success w-100" onclick="applyFilters()">Apply Filters</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Production Chart -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="harvest-card p-4">
                    <h5>Monthly Production</h5>
                    <div class="chart-container">
                        <canvas id="productionChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Harvest Modal -->
    <div class="modal fade" id="addHarvestModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Record Harvest</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="harvestForm">
                        <div class="mb-3">
                            <label class="form-label">Bin</label>
                            <select class="form-select" id="binSelect" required>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Amount (kg)</label>
                            <input type="number" class="form-control" id="amount" step="0.1" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Quality Rating</label>
                            <select class="form-select" id="quality" required>
                                <option value="excellent">Excellent</option>
                                <option value="good">Good</option>
                                <option value="fair">Fair</option>
                                <option value="poor">Poor</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <textarea class="form-control" id="notes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" onclick="saveHarvestRecord()">Save Record</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let productionChart;

        // Load harvest records
        async function loadHarvestRecords() {
            try {
                const response = await fetch('/api/vermicomposting/harvests');
                const data = await response.json();
                
                const recordsHtml = data.map(record => `
                    <div class="harvest-item">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">Bin ${record.bin_name}</h6>
                                <p class="mb-1">${record.amount} kg - Quality: ${record.quality}</p>
                                <small class="text-muted">${record.notes || ''}</small>
                            </div>
                            <small class="text-success">${new Date(record.harvest_date).toLocaleDateString()}</small>
                        </div>
                    </div>
                `).join('');
                
                document.getElementById('harvestRecords').innerHTML = recordsHtml;
                updateSummary(data);
                updateChart(data);
            } catch (error) {
                console.error('Error loading harvest records:', error);
            }
        }

        // Update summary statistics
        function updateSummary(records) {
            const totalAmount = records.reduce((sum, r) => sum + r.amount, 0);
            const avgAmount = totalAmount / records.length;
            const estimatedValue = totalAmount * 10; // Assuming $10 per kg
            
            document.getElementById('totalHarvests').textContent = records.length;
            document.getElementById('totalAmount').textContent = totalAmount.toFixed(1);
            document.getElementById('avgHarvest').textContent = avgAmount.toFixed(1);
            document.getElementById('estimatedValue').textContent = `$${estimatedValue.toFixed(2)}`;
        }

        // Update production chart
        function updateChart(records) {
            const monthlyData = {};
            records.forEach(record => {
                const month = new Date(record.harvest_date).toLocaleString('default', { month: 'short' });
                monthlyData[month] = (monthlyData[month] || 0) + record.amount;
            });

            const ctx = document.getElementById('productionChart').getContext('2d');
            
            if (productionChart) {
                productionChart.destroy();
            }

            productionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: Object.keys(monthlyData),
                    datasets: [{
                        label: 'Production (kg)',
                        data: Object.values(monthlyData),
                        backgroundColor: 'rgba(40, 167, 69, 0.8)',
                        borderRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0,0,0,0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        // Save new harvest record
        async function saveHarvestRecord() {
            const formData = {
                bin_id: document.getElementById('binSelect').value,
                amount: parseFloat(document.getElementById('amount').value),
                quality: document.getElementById('quality').value,
                notes: document.getElementById('notes').value,
                harvest_date: new Date().toISOString()
            };

            try {
                const response = await fetch('/api/vermicomposting/harvests', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    document.getElementById('harvestForm').reset();
                    bootstrap.Modal.getInstance(document.getElementById('addHarvestModal')).hide();
                    loadHarvestRecords();
                } else {
                    alert('Error saving harvest record');
                }
            } catch (error) {
                console.error('Error saving harvest record:', error);
                alert('Error saving harvest record');
            }
        }

        // Load bins for select options
        async function loadBins() {
            try {
                const response = await fetch('/api/vermicomposting/bins');
                const bins = await response.json();
                
                const binOptions = bins.map(bin => 
                    `<option value="${bin.id}">${bin.name}</option>`
                ).join('');
                
                document.getElementById('binSelect').innerHTML = binOptions;
                document.getElementById('binFilter').innerHTML = `<option value="">All Bins</option>${binOptions}`;
            } catch (error) {
                console.error('Error loading bins:', error);
            }
        }

        // Apply filters
        async function applyFilters() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const binId = document.getElementById('binFilter').value;

            try {
                const response = await fetch(`/api/vermicomposting/harvests?startDate=${startDate}&endDate=${endDate}&binId=${binId}`);
                const data = await response.json();
                
                const recordsHtml = data.map(record => `
                    <div class="harvest-item">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">Bin ${record.bin_name}</h6>
                                <p class="mb-1">${record.amount} kg - Quality: ${record.quality}</p>
                                <small class="text-muted">${record.notes || ''}</small>
                            </div>
                            <small class="text-success">${new Date(record.harvest_date).toLocaleDateString()}</small>
                        </div>
                    </div>
                `).join('');
                
                document.getElementById('harvestRecords').innerHTML = recordsHtml;
                updateSummary(data);
                updateChart(data);
            } catch (error) {
                console.error('Error applying filters:', error);
            }
        }

        // Initialize
        loadHarvestRecords();
        loadBins();
    </script>
</body>
</html>

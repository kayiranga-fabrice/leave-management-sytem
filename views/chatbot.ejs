<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vermicomposting Assistant</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .chat-container {
            height: 70vh;
            background: #f7f9fa;
            border-radius: 16px;
            overflow-y: auto;
            padding: 32px 18px 24px 18px;
            box-shadow: 0 4px 18px rgba(40,60,60,0.08);
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        .message {
            margin-bottom: 0;
            padding: 14px 18px;
            border-radius: 16px;
            max-width: 85%;
            word-break: break-word;
            font-size: 1.08rem;
            box-shadow: 0 2px 8px rgba(60,60,60,0.04);
            line-height: 1.56;
            display: inline-block;
        }
        .user-message {
            background: linear-gradient(90deg, #2d5a27 60%, #3fa47a 100%);
            color: #fff;
            margin-left: auto;
            border-bottom-right-radius: 6px;
            border-top-right-radius: 18px;
            border-top-left-radius: 18px;
            border-bottom-left-radius: 18px;
            text-align: right;
        }
        .bot-message {
            background: #fffbe8;
            border: 1px solid #e5e6e9;
            color: #1a2c2c;
            border-bottom-left-radius: 6px;
            border-top-right-radius: 18px;
            border-top-left-radius: 18px;
            border-bottom-right-radius: 18px;
            text-align: left;
        }
        .message ul {
            margin: 12px 0 0 18px;
            padding-left: 18px;
            padding-bottom: 8px;
        }
        .message li {
            margin-bottom: 4px;
            font-size: 1.04em;
            line-height: 1.6;
        }
        .typing-indicator {
            display: none;
            color: #6c757d;
            font-style: italic;
            font-size: 1rem;
            margin-left: 8px;
        }
        .chat-input {
            border-radius: 20px;
            padding: 12px 20px;
            font-size: 1rem;
        }
        .send-button {
            border-radius: 20px;
            padding: 12px 28px;
            font-size: 1rem;
        }
        @media (max-width: 600px) {
            .chat-container {
                padding: 10px 2vw 16px 2vw;
                height: 55vh;
            }
            .message {
                font-size: 0.98rem;
                padding: 10px 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #1a472a;">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-seedling me-2"></i>
                VermiTech
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/auth/login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/auth/register">Register</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/chatbot">AI Assistant</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container my-5">
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <h2 class="text-center mb-4">
                    <i class="fas fa-robot me-2"></i>
                    Vermicomposting AI Assistant
                </h2>
                
                <div class="chat-container mb-3" id="chatContainer">
                    <div class="message bot-message">
                        Hello! I'm your vermicomposting assistant. How can I help you today? Feel free to ask about:
                        <ul>
                            <li>Worm care and feeding</li>
                            <li>Bin maintenance</li>
                            <li>Troubleshooting issues</li>
                            <li>Harvesting techniques</li>
                            <li>Best practices</li>
                        </ul>
                    </div>
                    <div class="typing-indicator">
                        <i class="fas fa-ellipsis-h"></i> AI is thinking...
                    </div>
                </div>

                <div class="input-group">
                    <input type="text" class="form-control chat-input" id="userInput" 
                           placeholder="Type your question here..." 
                           aria-label="Chat message">
                    <button class="btn btn-primary send-button" type="button" id="sendButton">
                        <i class="fas fa-paper-plane me-2"></i>Send
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const chatContainer = document.getElementById('chatContainer');
            const userInput = document.getElementById('userInput');
            const sendButton = document.getElementById('sendButton');
            const typingIndicator = document.querySelector('.typing-indicator');

            function addMessage(content, isUser = false) {
                // If it's a bot message, enhance formatting
                if (!isUser) {
                    // Split on 'User:' and 'Assistant:' for multi-turn rendering
                    if (/User:/i.test(content) && /Assistant:/i.test(content)) {
                        // Split into user and assistant parts
                        const userMatch = content.match(/User:(.*?)(Assistant:|$)/is);
                        const assistantMatch = content.match(/Assistant:(.*)/is);
                        if (userMatch && userMatch[1]) {
                            addMessage(userMatch[1].trim(), true);
                        }
                        if (assistantMatch && assistantMatch[1]) {
                            addMessage(assistantMatch[1].trim(), false);
                        }
                        return;
                    }
                    // Convert markdown-style lists to HTML lists
                    let html = content
                        .replace(/\n?- ([^\n]+)/g, '<li>$1</li>')
                        .replace(/\n/g, '<br>');
                    if (/<li>/.test(html)) {
                        html = html.replace(/(<li>.*<\/li>)/gs, '<ul>$1</ul>');
                    }
                    const messageDiv = document.createElement('div');
                    messageDiv.className = 'message bot-message';
                    messageDiv.innerHTML = html;
                    chatContainer.insertBefore(messageDiv, typingIndicator);
                } else {
                    const messageDiv = document.createElement('div');
                    messageDiv.className = 'message user-message';
                    messageDiv.textContent = content;
                    chatContainer.insertBefore(messageDiv, typingIndicator);
                }
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }

            async function sendMessage() {
                const message = userInput.value.trim();
                if (!message) return;

                // Add user message
                addMessage(message, true);
                userInput.value = '';

                // Show typing indicator
                typingIndicator.style.display = 'block';

                try {
                    console.log('Sending message:', message);
                    const response = await fetch('/chatbot/ask', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ message })
                    });

                    console.log('Response status:', response.status);
                    const data = await response.json();
                    console.log('Response data:', data);

                    if (data.error) {
                        throw new Error(data.error + (data.details ? ': ' + data.details : ''));
                    }

                    // Add bot response
                    addMessage(data.reply);
                } catch (error) {
                    const errorMessage = 'Error: ' + (error.message || 'Unknown error occurred');
                    addMessage(errorMessage);
                    console.error('Detailed error:', error);
                } finally {
                    typingIndicator.style.display = 'none';
                }
            }

            sendButton.addEventListener('click', sendMessage);
            userInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });
        });
    </script>
</body>
</html>
